//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using WebSharper;
using WebSharper.UI.Next;
using WebSharper.UI.Next.CSharp.Client;
using SDoc = WebSharper.UI.Next.Doc;
using CDoc = WebSharper.UI.Next.Client.Doc;
using DomElement = WebSharper.JavaScript.Dom.Element;
using DomEvent = WebSharper.JavaScript.Dom.Event;
using CAttr = WebSharper.UI.Next.Client.Attr;
namespace $safeprojectname$.Template
{
[JavaScript]
public static class Index
{
public static class Main
{
public static Doc Doc(Doc ListContainer, IRef<string> Name, Action<DomElement, DomEvent> Add) => SDoc.Concat(new[]{ SDoc.TextNode("\n        "), SDoc.Element("ul", Enumerable.Empty<Attr>(), new[]{ ListContainer }), SDoc.TextNode("\n        "), SDoc.Element("div", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("\n            "), CDoc.Input(new[]{ Attr.Create("placeholder", "Name") }, Name), SDoc.TextNode("\n            "), SDoc.Element("button", new[]{ CAttr.Handler("click", FSharpConvert.Fun(Add)) }, new[]{ SDoc.TextNode("Add") }), SDoc.TextNode("\n            "), SDoc.Element("div", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("You are about to add: "), CDoc.TextView(Name.View) }), SDoc.TextNode("\n        ") }), SDoc.TextNode("\n    ") });
}
public static class ListItem
{
public static Doc Doc(View<string> Name) => SDoc.Concat(new[]{ SDoc.Element("li", Enumerable.Empty<Attr>(), new[]{ CDoc.TextView(Name) }) });
}
public static Doc Doc() => SDoc.Concat(new[]{ SDoc.Element("html", new[]{ Attr.Create("lang", "en") }, new[]{ SDoc.TextNode("\n"), SDoc.Element("head", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("\n    "), SDoc.Element("title", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("UINextApplication46") }), SDoc.TextNode("\n    "), SDoc.Element("meta", new[]{ Attr.Create("charset", "utf-8") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n    "), SDoc.Element("meta", new[]{ Attr.Create("name", "viewport"), Attr.Create("content", "width=device-width, initial-scale=1.0") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n    "), SDoc.Element("link", new[]{ Attr.Create("rel", "stylesheet"), Attr.Create("type", "text/css"), Attr.Create("href", "Content/UINextApplication46.css") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n    "), SDoc.Element("script", new[]{ Attr.Create("type", "text/javascript"), Attr.Create("src", "Content/UINextApplication46.head.js") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n") }), SDoc.TextNode("\n"), SDoc.Element("body", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("\n    "), SDoc.Element("h1", Enumerable.Empty<Attr>(), new[]{ SDoc.TextNode("My list of unique people") }), SDoc.TextNode("\n    "), SDoc.TextNode("\n    "), SDoc.Element("script", new[]{ Attr.Create("type", "text/javascript"), Attr.Create("src", "Content/UINextApplication46.min.js") }, Enumerable.Empty<Doc>()), SDoc.TextNode("\n") }), SDoc.TextNode("\n") }) });
}
}