//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.FSharp.Core;
using WebSharper;
using WebSharper.UI;
using WebSharper.UI.Templating;
using WebSharper.UI.CSharp.Client;
using SDoc = WebSharper.UI.Doc;
using DomElement = WebSharper.JavaScript.Dom.Element;
using DomEvent = WebSharper.JavaScript.Dom.Event;
namespace $safeprojectname$.Template
{
    [JavaScript]
    public class Index
    {
        List<TemplateHole> holes = new List<TemplateHole>();
        public Doc Doc() => Runtime.GetOrLoadTemplate("index", null, FSharpOption<string>.Some("index.html"), "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <title>SPA10</title>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"Content/SPA10.css\">\r\n    <style>\r\n        /* Don't show the not-yet-loaded templates */\r\n        [ws-template], [ws-children-template] {\r\n            display: none;\r\n        }\r\n    </style>\r\n    <script type=\"text/javascript\" src=\"Content/SPA10.head.js\"></script>\r\n</head>\r\n<body>\r\n    <h1>My list of unique people</h1>\r\n    <div id=\"main\" ws-children-template=\"Main\">\r\n        <ul ws-hole=\"ListContainer\">\r\n            <li ws-template=\"ListItem\">${Name}</li>\r\n        </ul>\r\n        <div>\r\n            <input ws-var=\"Name\" placeholder=\"Name\">\r\n            <button ws-onclick=\"Add\">Add</button>\r\n            <div>You are about to add: ${Name}</div>\r\n        </div>\r\n    </div>\r\n    <script type=\"text/javascript\" src=\"Content/SPA10.min.js\"></script>\r\n</body>\r\n</html>\r\n", holes, FSharpOption<string>.Some("index"), ServerLoad.WhenChanged, new Tuple<string, FSharpOption<string>, string>[] { }, false);
        public class ListItem
        {
            List<TemplateHole> holes = new List<TemplateHole>();
            public ListItem Name(string x) { holes.Add(TemplateHole.NewText("name", x)); return this; }
            public ListItem Name(View<string> x) { holes.Add(TemplateHole.NewTextView("name", x)); return this; }
            public Doc Doc() => Runtime.GetOrLoadTemplate("index", FSharpOption<string>.Some("listitem"), FSharpOption<string>.Some("index.html"), "<li>${Name}</li>", holes, FSharpOption<string>.Some("index"), ServerLoad.WhenChanged, new Tuple<string, FSharpOption<string>, string>[] { }, true);
            public Elt Elt() => (Elt)Doc();
        }
        public class Main
        {
            List<TemplateHole> holes = new List<TemplateHole>();
            public Main ListContainer(Doc x) { holes.Add(TemplateHole.NewElt("listcontainer", x)); return this; }
            public Main ListContainer(IEnumerable<Doc> x) { holes.Add(TemplateHole.NewElt("listcontainer", SDoc.Concat(x))); return this; }
            public Main ListContainer(string x) { holes.Add(TemplateHole.NewText("listcontainer", x)); return this; }
            public Main ListContainer(View<string> x) { holes.Add(TemplateHole.NewTextView("listcontainer", x)); return this; }
            public Main Name(Var<string> x) { holes.Add(TemplateHole.NewVarStr("name", x)); return this; }
            public Main Add(Action<DomElement, DomEvent> x) { holes.Add(TemplateHole.NewEvent("add", FSharpConvert.Fun<DomElement, DomEvent>(x))); return this; }
            public Main Add(Action x) { holes.Add(TemplateHole.NewEvent("add", FSharpConvert.Fun<DomElement, DomEvent>((a, b) => x()))); return this; }
            public Doc Doc() => Runtime.GetOrLoadTemplate("index", FSharpOption<string>.Some("main"), FSharpOption<string>.Some("index.html"), "\r\n        <ul ws-hole=\"ListContainer\">\r\n            <li ws-template=\"ListItem\">${Name}</li>\r\n        </ul>\r\n        <div>\r\n            <input ws-var=\"Name\" placeholder=\"Name\">\r\n            <button ws-onclick=\"Add\">Add</button>\r\n            <div>You are about to add: ${Name}</div>\r\n        </div>\r\n    ", holes, FSharpOption<string>.Some("index"), ServerLoad.WhenChanged, new Tuple<string, FSharpOption<string>, string>[] { }, false);
        }
    }
}